{"pageProps":{"data":{"id":"2021-03-10","content":"[[webpack]]のことを調べて最新の[[webpack]]でも[[WebAssembly]]が使えるようになった。[The `wasm-bindgen` Guide](https://rustwasm.github.io/docs/wasm-bindgen/)を読みながら、アニメーションするものを作ってみた。\n\nhttps://github.com/te9yie/wasm-bounce-ball\n\n<iframe\n    title=\"wasm-bounce-ball\"\n    width=\"430\"\n    height=\"230\"\n    src=\"https://te9yie.github.io/wasm-bounce-ball\">\n</iframe>\n\n---\n\n`Window.requestAnimationFrame()`の呼び出しが難解。\n\n[[JavaScript]]でもクロージャを作って、その中で自分自身を渡すみたいな作りになる。\n\n```javascript\nconst step = (now) => {\n    ...\n    window.requestAnimationFrame(step);\n};\nwindow.requestAnimationFrame(step);\n```\n\n[[Rust]]だとこんな感じ。クロージャの中で自分自身を使いたいから先に変数は定義しておいて、登録用とクロージャ用に`Rc`で共有して、あとで代入するから`RefCell`にして――みたいな。\n\n```rust\nlet f = Rc::new(RefCell::new(None));\nlet ff = Rc::clone(&f);\n*ff.borrow_mut() = Some(Closure::wrap(Box::new(move |now| {\n    ...\n    request_animation_frame(f.borrow().as_ref().unwrap());\n}) as Box<dyn FnMut(f64)>));\nrequest_animation_frame(ff.borrow().as_ref().unwrap());\n```\n\nマウスやキーボードなどの入力も取れるようになると、もう少し面白いものも作れそうだ。\n"}},"__N_SSG":true}